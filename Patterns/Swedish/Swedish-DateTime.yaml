---
#ISO 639-2 Code
LangMarker: Swe
CheckBothBeforeAfter: !bool false
TillRegex: !nestedRegex
  def: (?<till>\b(till|tom|t\.o\.m\.)\b(\s+den\b)?|{BaseDateTime.RangeConnectorSymbolRegex})
  references: [ BaseDateTime.RangeConnectorSymbolRegex ]
RangeConnectorRegex : !nestedRegex
  def: (?<and>\b(till|tom|t\.o\.\m\.)\b(\s+den\b)?|{BaseDateTime.RangeConnectorSymbolRegex})
  references: [ BaseDateTime.RangeConnectorSymbolRegex ]
# Filter regex, no need to localize
LastNegPrefix: !simpleRegex
  def: (?<!(w(ill|ould|on\s*'\s*t)|m(ay|ight|ust)|sh(all|ould(n\s*'\s*t)?)|c(an(\s*'\s*t|not)?|ould(n\s*'\s*t)?))(\s+not)?\s+)
RelativeRegex: !nestedRegex
  def: \b(?<order>efterföljande|nästa|kommande|denna|{LastNegPrefix}senaste|föregående|tidigare|nuvarande|the)\b
  references: [ LastNegPrefix ]
StrictRelativeRegex: !nestedRegex
  def: \b(?<order>efterföljande|nästa|kommande|denna|{LastNegPrefix}senaste|föregående|tidigare|nuvarande)\b
  references: [ LastNegPrefix ]
UpcomingPrefixRegex: !simpleRegex
  def: ((den\s+)?((kommande))
NextPrefixRegex: !nestedRegex 
  def: \b(efterföljande|nästa|{UpcomingPrefixRegex})\b
  references: [ UpcomingPrefixRegex ]
# We make "next" and "upcoming" separately as when parsing, some behaviours are different
# "next Friday" might be different from "upcoming Friday"
AfterNextSuffixRegex: !simpleRegex
  def: \b(efter\s+nästa)\b
PastPrefixRegex: !simpleRegex
  def: (förra)\b
PreviousPrefixRegex: !nestedRegex
  def: ({LastNegPrefix}last|previous|{PastPrefixRegex})\b
  references: [ LastNegPrefix, PastPrefixRegex ]
# We make "past" and "previous" separately as when parsing, some behaviours are different
# "last Tuesday" might be different from "past Tuesday"
ThisPrefixRegex: !simpleRegex
  def: (denna|nuvarande|innevarande)\b
RangePrefixRegex: !simpleRegex
  def: (från|mellan)
CenturySuffixRegex: !simpleRegex
  def: (^sekel)\b
ReferencePrefixRegex: !simpleRegex
  def: (den|samma)\b
FutureSuffixRegex: !simpleRegex
  def: \b(i\s+)?(framtiden)\b
DayRegex: !simpleRegex
  def: (den\s*)?(?<!(\d+:?|\$)\s*)(?<day>(?:3[0-1]|[1-2]\d|0?[1-9])(?:a|e)?)(?=\b|t)
ImplicitDayRegex: !simpleRegex
  def: (den\s*)?(?<day>(?:3[0-1]|[0-2]?\d)(?:a|e))\b
MonthNumRegex: !simpleRegex
  def: (?<month>1[0-2]|(0)?[1-9])\b
WrittenOneToNineRegex: !simpleRegex
  def: (?:en|två|tre|fyra|fem|sex|sju|åtta|nio)
WrittenElevenToNineteenRegex: !simpleRegex
  def: (?:elva|tolv|(?:tret|fjor|fem|sex|sjut|ar|nit)ton)
WrittenTensRegex: !simpleRegex
  def: (?:tio|tjugo|trettio|fyrtio|femtio|sextio|sjuttio|åttio|nittio)
WrittenNumRegex: !nestedRegex
  def: (?:{WrittenOneToNineRegex}|{WrittenElevenToNineteenRegex}|{WrittenTensRegex}({WrittenOneToNineRegex})?)
  references: [ WrittenOneToNineRegex, WrittenElevenToNineteenRegex, WrittenTensRegex ]
WrittenCenturyFullYearRegex: !nestedRegex
  def: (?:(ett|två)tusen({WrittenOneToNineRegex}hundra)?)
  references: [ WrittenOneToNineRegex]
WrittenCenturyOrdinalYearRegex: !simpleRegex
  def: (?:tjugo((ett|två))?|tio|elva|tolv|tretton|femton|arton|(?:fjor|sex|sjut|nit)(ton)?|ett|två|tre|fem|åtta)
CenturyRegex: !nestedRegex
  def: \b(?<century>{WrittenCenturyFullYearRegex}|{WrittenCenturyOrdinalYearRegex}(\s+hundra)?)\b
  references: [WrittenCenturyFullYearRegex, WrittenCenturyOrdinalYearRegex ]
LastTwoYearNumRegex: !nestedRegex
  def: (?:noll\s+{WrittenOneToNineRegex}|{WrittenElevenToNineteenRegex}|{WrittenTensRegex}({WrittenOneToNineRegex})?)
  references: [ WrittenOneToNineRegex, WrittenElevenToNineteenRegex, WrittenTensRegex ]
FullTextYearRegex: !nestedRegex
  def: \b((?<firsttwoyearnum>{CenturyRegex})(?<lasttwoyearnum>{LastTwoYearNumRegex})\b|\b(?<firsttwoyearnum>{WrittenCenturyFullYearRegex}|{WrittenCenturyOrdinalYearRegex}hundra))\b
  references: [ CenturyRegex, WrittenCenturyFullYearRegex, WrittenCenturyOrdinalYearRegex, LastTwoYearNumRegex ]
OclockRegex: !simpleRegex
  def: (?<oclock>prick)
SpecialDescRegex: !simpleRegex
  def: ((?<ipm>)p\b)
AmDescRegex: !nestedRegex
  def: (?:{BaseDateTime.BaseAmDescRegex})
  references: [BaseDateTime.BaseAmDescRegex]
PmDescRegex: !nestedRegex
  def: (:?{BaseDateTime.BasePmDescRegex})
  references: [BaseDateTime.BasePmDescRegex]
AmPmDescRegex: !nestedRegex
  def: (:?{BaseDateTime.BaseAmPmDescRegex})
  references: [BaseDateTime.BaseAmPmDescRegex]
DescRegex: !nestedRegex
  def: (:?(:?({OclockRegex}\s+)?(?<desc>({AmPmDescRegex}|{AmDescRegex}|{PmDescRegex}|{SpecialDescRegex})))|{OclockRegex})
  references: [ OclockRegex, AmDescRegex, PmDescRegex, AmPmDescRegex, SpecialDescRegex ]
OfPrepositionRegex: !simpleRegex
  def: (\bof\b)
# Exclude cases that include the "Am/Pm" suffix
TwoDigitYearRegex: !nestedRegex
  def: \b(?<![$])(?<year>([0-24-9]\d))(?!(\s*((\:\d)|{AmDescRegex}|{PmDescRegex}|\.\d)))\b
  references: [ AmDescRegex, PmDescRegex]
YearRegex: !nestedRegex
  def: (?:{BaseDateTime.FourDigitYearRegex}|{FullTextYearRegex})
  references: [ BaseDateTime.FourDigitYearRegex, FullTextYearRegex ]
WeekDayRegex: !simpleRegex
  def: \b(?<weekday>(?:sön?|mån?|tis?|tor?|fre?|ons?|lör?)(dag)?)s?\b
SingleWeekDayRegex: !simpleRegex
  def: \b(?<weekday>söndag|lördag|(?:mån|tis|tors|fre|ons)(dag)?|((?<=på\s+)(lör|sön)))\b
RelativeMonthRegex: !nestedRegex
  def: (?<relmonth>((dag\s+)?i\s+)?{RelativeRegex}\s+månad)\b
  references: [RelativeRegex]
WrittenMonthRegex: !simpleRegex
  def: ((?<month>apr(il)?|aug(usti)?|dec(ember)?|feb(ruari)?|jan(uari)?|juli?|juni?|mar(s)?|maj|nov(ember)?|okt(ober)?|sept(ember)?|sept?)((\s+månad)?)
MonthSuffixRegex: !nestedRegex
  def: (?<msuf>(?:(i|under)\s+)?({RelativeMonthRegex}|{WrittenMonthRegex}))
  references: [ RelativeMonthRegex, WrittenMonthRegex ]
DateUnitRegex: !simpleRegex
  def: (?<unit>sekel|år|månad(er)?|veck(a|or)?|(?<business>(var))?dag(ar)?|helg(er)?|(?<=\s+\d{1,4})[ymwd])\b
DateTokenPrefix: 'den '
TimeTokenPrefix: 'klockan '
TokenBeforeDate: 'den '
TokenBeforeTime: 'klockan '
FromRegex: !simpleRegex
  def: \b(från(\s+den)?)$
BetweenTokenRegex: !simpleRegex
  def: \b(mellan(\s+den)?)$
SimpleCasesRegex: !nestedRegex
  def: \b({RangePrefixRegex}\s+)?({DayRegex})\s*{TillRegex}\s*({DayRegex}\s+{MonthSuffixRegex}|{MonthSuffixRegex}\s+{DayRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ DayRegex, TillRegex, MonthSuffixRegex, YearRegex, RangePrefixRegex ]
MonthFrontSimpleCasesRegex: !nestedRegex
  def: \b({RangePrefixRegex}\s+)?{MonthSuffixRegex}\s+((från)\s+)?({DayRegex})\s*{TillRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ MonthSuffixRegex, DayRegex, TillRegex, YearRegex, RangePrefixRegex ]
MonthFrontBetweenRegex: !nestedRegex
  def: \b{MonthSuffixRegex}\s+(mellan\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ MonthSuffixRegex, DayRegex, RangeConnectorRegex , YearRegex ]
BetweenRegex: !nestedRegex
  def: \b(between\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})\s+{MonthSuffixRegex}((\s+|\s*,\s*){YearRegex})?\b
  references: [ DayRegex, RangeConnectorRegex , MonthSuffixRegex, YearRegex ]
MonthWithYear: !nestedRegex
  def: \b(({WrittenMonthRegex}[\.]?(\s*)[/\\\-\.,]?(\s+(år))?(\s*)({YearRegex}|(?<order>efter|nästa|senaste|detta|innevarande)\s+year))|(({YearRegex}|(?<order>efter|nästa|senaste|detta|innevarande)\s+år)(\s*),?(\s*){WrittenMonthRegex}))\b
  references: [ WrittenMonthRegex, YearRegex ]
SpecialYearPrefixes: !simpleRegex
  def: (kalender|(?<special>räkenskaps|skol))
OneWordPeriodRegex: !nestedRegex
  def: \b(((i\s+)?({StrictRelativeRegex}\s+)?(?<month>apr(il)?|aug(usti)?|dec(ember)?|feb(ruari)?|jan(uari)?|juli?|juni?|mar(s)?|maj|nov(ember)?|okt(ober)?|sep(tember)?|sept?))|(month|year) to date|(?<toDate>(till och med|tom|t\.o\.m\.)\s+idag)|({RelativeRegex}\s+)?(min\s+)?((?<business>arbets\s+weveckaek|arbetsvecka)|veckoslut|månad|(({SpecialYearPrefixes}\s+)?år))(?!(\s+\d+(?!({BaseDateTime.BaseAmDescRegex}|{BaseDateTime.BasePmDescRegex}))|\s+tom\s+idag))(\s+{AfterNextSuffixRegex})?)\b
  references: [ StrictRelativeRegex, RelativeRegex, AfterNextSuffixRegex, SpecialYearPrefixes, BaseDateTime.BaseAmDescRegex, BaseDateTime.BasePmDescRegex ]
MonthNumWithYear: !nestedRegex
  def: \b(({BaseDateTime.FourDigitYearRegex}(\s*)[/\-\.](\s*){MonthNumRegex})|({MonthNumRegex}(\s*)[/\-](\s*){BaseDateTime.FourDigitYearRegex}))\b
  references: [ BaseDateTime.FourDigitYearRegex, MonthNumRegex ]
WeekOfMonthRegex: !nestedRegex
  def: \b(?<wom>(den|det\s+)?(?<cardinal>första|1:a|andr(a|e)|2:(a|e)|tredje|3:e|fjärde|4:e|femte|5:e|senaste)\s+veckan\s+{MonthSuffixRegex}(\s+{BaseDateTime.FourDigitYearRegex}|{RelativeRegex}\s+år)?)\b
  references: [ MonthSuffixRegex, BaseDateTime.FourDigitYearRegex, RelativeRegex ]
WeekOfYearRegex: !nestedRegex
  def: \b(?<woy>(den|det\s+)?(?<cardinal>första|1:a|andr(a|e)|2:(a|e)|tredje|3:e|fjärde|4:e|femte|5:e|senaste)\s+veckan\s+({YearRegex}|{RelativeRegex}\s+år))\b
  references: [ YearRegex, RelativeRegex ]
FollowedDateUnit: !nestedRegex
  def: ^\s*{DateUnitRegex}
  references: [ DateUnitRegex ]
NumberCombinedWithDateUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?){DateUnitRegex}
  references: [ DateUnitRegex ]
QuarterTermRegex: !simpleRegex
  def: \b(((?<cardinal>första|1:a|andra|2:a|tredje|3:e|fjärde|4:e)[ -]+kvartalet)|(kv(?<number>[1-4])))\b
RelativeQuarterTermRegex: !nestedRegex
  def: \b(?<orderQuarter>{StrictRelativeRegex})\s+kvartalet\b
  references: [ StrictRelativeRegex ]
QuarterRegex: !nestedRegex
  def: ((det\s+)?{QuarterTermRegex}(?:(\s*,\s*)?\s+({YearRegex}|{RelativeRegex}\s+år))?)|{RelativeQuarterTermRegex}
  references: [ YearRegex, RelativeRegex, QuarterTermRegex, RelativeQuarterTermRegex ]
QuarterRegexYearFront: !nestedRegex
  def: (?:{YearRegex}|{RelativeRegex}\s+year)('s)?(?:\s*-\s*|\s+(det\s+)?)?{QuarterTermRegex}
  references: [ YearRegex, RelativeRegex, QuarterTermRegex ]
HalfYearTermRegex: !simpleRegex
  def: (?<cardinal>första|1:a|andra|2:a)\s+halvåret
HalfYearFrontRegex: !nestedRegex
  def: (?<year>((1[5-9]|20)\d{2})|2100)(\s*-\s*|\s+(the\s+)?)?h(?<number>[1-2])
  references: [ YearRegex ]
HalfYearBackRegex: !nestedRegex
  def: (h(?<number>[1-2])|({HalfYearTermRegex}))(\s*,\s*)?\s+({YearRegex})
  references: [ YearRegex, HalfYearTermRegex ]
HalfYearRelativeRegex: !nestedRegex
  def: {HalfYearTermRegex}(\s*,\s*)?\s+({RelativeRegex}\s+år)
  references: [ RelativeRegex, HalfYearTermRegex ]
AllHalfYearRegex: !nestedRegex
  def: ({HalfYearFrontRegex})|({HalfYearBackRegex})|({HalfYearRelativeRegex})
  references: [ HalfYearFrontRegex, HalfYearBackRegex, HalfYearRelativeRegex ]
EarlyPrefixRegex: !simpleRegex
  def: \b(?<EarlyPrefix>tidigt|början av|början på|starten av|(?<RelEarly>tidigare(\s+under)?))\b
MidPrefixRegex: !simpleRegex
  def: \b(?<MidPrefix>mid-?|mitten av|mitten på)\b
LaterPrefixRegex: !simpleRegex
  def: \b(?<LatePrefix>sent|slutet av|(?<RelLate>senare(\s+under)?))\b
PrefixPeriodRegex: !nestedRegex
  def: ({EarlyPrefixRegex}|{MidPrefixRegex}|{LaterPrefixRegex})
  references: [EarlyPrefixRegex, MidPrefixRegex, LaterPrefixRegex]
PrefixDayRegex: !simpleRegex
  def: \b((?<EarlyPrefix>tidigt)|(?<MidPrefix>mitt(en)?)|(?<LatePrefix>senare?))(\s+under|på|av)?(\s+dagen)?$
SeasonDescRegex: !simpleRegex
  def: (?<seas>vår(en)?|sommar(en)?|höst(en)?|vintern?)
SeasonRegex: !nestedRegex
  def: \b(?<season>({PrefixPeriodRegex}\s+)?({RelativeRegex}\s+)?{SeasonDescRegex}((\s*,\s*)?\s+({YearRegex}|{RelativeRegex}\s+år))?)\b
  references: [ YearRegex, RelativeRegex, SeasonDescRegex, PrefixPeriodRegex ]
WhichWeekRegex: !simpleRegex
  def: \b(week)(\s*)(?<number>5[0-3]|[1-4]\d|0?[1-9])\b
WeekOfRegex: !simpleRegex
  def: ((veckan som)(\s+((börjar|startar)(\s+med)?)))(\s+den)?
MonthOfRegex: !simpleRegex
  def: (i)(\s*)(månad)
MonthRegex: !simpleRegex
  def: (?<month>apr(il)?|aug(usti)?|dec(ember)?|feb(ruari)?|jan(uari)?|juli?|juni?|mar(s)?|maj|nov(ember)?|okt(ober)?|sep(tember)?|sept?)
# This is a look-behind assertion. Some cases should extract two digits as year like 11/25/16, where 16 means 2016. 
# The assertion determines if not connected with am/pm or hour separator (:), which should be a time.
DateYearRegex: !nestedRegex
  def: (?<year>{BaseDateTime.FourDigitYearRegex}|{TwoDigitYearRegex})
  references: [ BaseDateTime.FourDigitYearRegex, TwoDigitYearRegex ]
YearSuffix: !nestedRegex
  def: (\s*({DateYearRegex}|{FullTextYearRegex}))
  references: [ DateYearRegex, FullTextYearRegex ]
OnRegex: !nestedRegex
  def: (?<=\bpå\s+)({DayRegex}s?)\b
  references: [ DayRegex ]
RelaxedOnRegex: !simpleRegex
  def: (?<=\b(on|at|in)\s+)((?<day>(3[0-1]|[0-2]?\d)(?:a|:e))s?)\b
PrefixWeekDayRegex: !simpleRegex
  def: (\s*((,?\s*på)|[-—–]))
ThisRegex: !nestedRegex
  def: \b(denna(\s*vecka{PrefixWeekDayRegex}?)?\s*{WeekDayRegex})|({WeekDayRegex}(\s+denna\s*vecka))\b
  references: [ WeekDayRegex, PrefixWeekDayRegex ]
LastDateRegex: !nestedRegex
  def: \b({PreviousPrefixRegex}(\s*vecka{PrefixWeekDayRegex}?)?\s*{WeekDayRegex})|({WeekDayRegex}(\s+(den\s+)?senaste\s*veckan))\b
  references: [ PreviousPrefixRegex, WeekDayRegex, PrefixWeekDayRegex ]
NextDateRegex: !nestedRegex
  def: \b({NextPrefixRegex}(\s*vecka{PrefixWeekDayRegex}?)?\s*{WeekDayRegex})|((på\s+)?{WeekDayRegex}(\s+(följande|nästa)\s*vecka))\b
  references: [ NextPrefixRegex, WeekDayRegex, PrefixWeekDayRegex ]
SpecialDayRegex: !nestedRegex
  def: \b((the\s+)?i förrgår|i övermorgon|dagen\s+(före|efter)(?!=\s+dag)|((den\s+)?({RelativeRegex}|min)\s+dag)|igår|imorgon|idag)\b
  references: [ RelativeRegex ]
SpecialDayWithNumRegex: !nestedRegex
  def: \b((?<number>{WrittenNumRegex})\s+dagar?\s+(räknat\s+)?från\s+(?<day>igår|imorgon|idag))\b
  references: [ WrittenNumRegex ]
RelativeDayRegex: !nestedRegex
  def: \b(((den\s+)?{RelativeRegex}\s+dagen))\b
  references: [ RelativeRegex ]
SetWeekDayRegex: !simpleRegex
  def: \b(?<prefix>på\s+)?(?<weekday>morgonen|eftermiddagen|kvällen|natten|(sön|mån|tis|ons|tors|fre|lör)dag)s\b
WeekDayOfMonthRegex: !nestedRegex
  def: (?<wom>(the\s+)?(?<cardinal>första|1:a|andra|2:a|tredje|3:e|fjärde|4:e|femte|5:e|senaste)\s+(veckan\s+{MonthSuffixRegex}[\.]?\s+(på\s+)?{WeekDayRegex}|{WeekDayRegex}\s+{MonthSuffixRegex}))
  references: [ WeekDayRegex, MonthSuffixRegex ]
RelativeWeekDayRegex: !nestedRegex
  def: \b({WrittenNumRegex}\s+{WeekDayRegex}\s+(från\s+nu|senare))\b
  references: [ WrittenNumRegex, WeekDayRegex ]
SpecialDate: !nestedRegex
  def: (?=\b(på|under)\s+den\s+){DayRegex}\b
  references: [ DayRegex ]
DatePreposition: !simpleRegex
  def: \b(på|om)
DateExtractorYearTermRegex: !nestedRegex
  def: (\s+|\s*,\s*|\s+i\s+){DateYearRegex}
  references: [ DateYearRegex ]
DateExtractor1: !nestedRegex
  def: \b({WeekDayRegex}\s*[,-]?\s*)?(({MonthRegex}[\.]?\s*[/\\.,-]?\s*{DayRegex})|(\({MonthRegex}\s*[-.]\s*{DayRegex}\)))(\s*\(\s*{WeekDayRegex}\s*\))?({DateExtractorYearTermRegex}\b)?
  references: [ WeekDayRegex, MonthRegex, DayRegex, DateExtractorYearTermRegex ]
DateExtractor3: !nestedRegex
  def: \b({WeekDayRegex}(\s+|\s*,\s*))?{DayRegex}[\.]?(\s+|\s*,\s*|\s+i\s+|\s*-\s*){MonthRegex}[\.]?((\s+in)?{DateExtractorYearTermRegex})?\b
  references: [ WeekDayRegex, DayRegex, MonthRegex, DateExtractorYearTermRegex ]
DateExtractor4: !nestedRegex
  def: \b{MonthNumRegex}\s*[/\\\-]\s*{DayRegex}[\.]?\s*[/\\\-]\s*{DateYearRegex}
  references: [ MonthNumRegex, DayRegex, DateYearRegex ]
# The final lookahead in DateExtractor5 avoids extracting as date "10/1-11" from an input like "10/1-11/2/2017"
DateExtractor5: !nestedRegex
  def: \b{DayRegex}\s*[/\\\-\.]\s*({MonthNumRegex}|{MonthRegex})\s*[/\\\-\.]\s*{DateYearRegex}(?!\s*[/\\\-\.]\s*\d+)
  references: [ DayRegex, MonthNumRegex, MonthRegex, DateYearRegex ]
DateExtractor6: !nestedRegex
  def: (?<={DatePreposition}\s+)({StrictRelativeRegex}\s+)?({WeekDayRegex}\s+)?{MonthNumRegex}[\-\.]{DayRegex}(?![%])\b
  references: [ MonthNumRegex, DayRegex, WeekDayRegex, DatePreposition, StrictRelativeRegex ]
DateExtractor7L: !nestedRegex
  def: \b({WeekDayRegex}\s+)?{MonthNumRegex}\s*/\s*{DayRegex}{DateExtractorYearTermRegex}(?![%])\b
  references: [ MonthNumRegex, DayRegex, WeekDayRegex, DateExtractorYearTermRegex ]
DateExtractor7S: !nestedRegex
  def: \b({WeekDayRegex}\s+)?{MonthNumRegex}\s*/\s*{DayRegex}(?![%])\b
  references: [ MonthNumRegex, DayRegex, WeekDayRegex ]
# The only difference between 7L and 7S is whether "Year" part is required
# We have both the long and short Regex because we would like to catch both "11/20, 12" and "11/20, 12/20"
# Only use the long Regex would ignore "11/20" in "11/20, 12/20" and it is hard to exhaust all characters after the "year" as we also have cases like "11/20, 12 of April"
# Same for DateExtractor9L and DateExtractor9S
DateExtractor8: !nestedRegex
  def: (?<={DatePreposition}\s+)({StrictRelativeRegex}\s+)?({WeekDayRegex}\s+)?{DayRegex}[\\\-]{MonthNumRegex}(?![%])\b
  references: [ DayRegex, MonthNumRegex, WeekDayRegex, DatePreposition, StrictRelativeRegex ]
DateExtractor9L: !nestedRegex
  def: \b({WeekDayRegex}\s+)?{DayRegex}\s*/\s*{MonthNumRegex}{DateExtractorYearTermRegex}(?![%])\b
  references: [ DayRegex, MonthNumRegex, WeekDayRegex, DateExtractorYearTermRegex ]
DateExtractor9S: !nestedRegex
  def: \b({WeekDayRegex}\s+)?{DayRegex}\s*/\s*{MonthNumRegex}(?![%])\b
  references: [ DayRegex, MonthNumRegex, WeekDayRegex ]
DateExtractorA: !nestedRegex
  def: \b({WeekDayRegex}\s+)?{BaseDateTime.FourDigitYearRegex}\s*[/\\\-\.]\s*({MonthNumRegex}|{MonthRegex})\s*[/\\\-\.]\s*{DayRegex}
  references: [ BaseDateTime.FourDigitYearRegex, MonthNumRegex, MonthRegex, DayRegex, WeekDayRegex ]
OfMonth: !nestedRegex
  def: ^\s*(dagen\s+)?i\s*{MonthRegex}
  references: [ MonthRegex ]
MonthEnd: !nestedRegex
  def: '{MonthRegex}\s*(the)?\s*$'
  references: [ MonthRegex ]
WeekDayEnd: !nestedRegex
  def: '(this\s+)?{WeekDayRegex}\s*,?\s*$'
  references: [ WeekDayRegex ]
WeekDayStart: !simpleRegex
  def: ^[\.]
RangeUnitRegex: !simpleRegex
  def: \b(?<unit>år|månad(er)?|veck(a|or)?)\b
HourNumRegex: !simpleRegex
  def: \b(?<hournum>noll|ett|två|tre|fyra|fem|sex|sju|åtta|nio|tio|elva|tolv)\b
MinuteNumRegex: !simpleRegex
  def: (?<minnum>tio|elva|tolv|tretton|femton|arton|(fjor|sex|sjut|nit)(ton)?|tjugo|trettio|fyrtio|femtio|en|två|tre|fem|åtta)
DeltaMinuteNumRegex: !simpleRegex
  def: (?<deltaminnum>tio|elva|tolv|tretton|femton|arton|(fjor|sex|sjut|nit)(ton)?|tjugo|trettio|fyrtio|femtio|en|två|tre|fem|åtta)
PmRegex: !simpleRegex
  def: (?<pm>(((?:vid|runt|på|för)\s+(the\s+)?)?(eftermiddag|kväll|(mid)?natt|lunch(tid)?))|((vid|runt|på|för)\s+(the\s+)?natt(en)?))
PmRegexFull: !simpleRegex
  def: (?<pm>((?:vid|runt|på|för)\s+(the\s+)?)?(eftermiddag|kväll(en)?|(mid)?nattt|lunchtid))
AmRegex: !simpleRegex
  def: (?<am>((?:vid|runt|på|för)\s+(morgonen))
LunchRegex: !simpleRegex
  def: \blunch(tid)?\b
NightRegex: !simpleRegex
  def: \b(mid)?natt\b
CommonDatePrefixRegex: !simpleRegex
  def: ^[\.]
LessThanOneHour: !nestedRegex
  def: (?<lth>(en\s+)?kvart|tre kvart?|halv(timme)?|{BaseDateTime.DeltaMinuteRegex}(\s+(minut(er)?|min))|{DeltaMinuteNumRegex}(\s+(minut(er)?|min)))
  references: [ BaseDateTime.DeltaMinuteRegex, DeltaMinuteNumRegex ]
WrittenTimeRegex: !nestedRegex
  def: (?<writtentime>{HourNumRegex}\s+({MinuteNumRegex}|(?<tens>tjugo|trettio|fyrtio|femtio)\s+{MinuteNumRegex}))
  references: [ HourNumRegex, MinuteNumRegex ]
TimePrefix: !nestedRegex
  def: (?<prefix>{LessThanOneHour}\s+(över|i))
  references: [ LessThanOneHour ]
TimeSuffix: !nestedRegex
  def: (?<suffix>{AmRegex}|{PmRegex}|{OclockRegex})
  references: [ AmRegex, PmRegex, OclockRegex ]
TimeSuffixFull: !nestedRegex
  def: (?<suffix>{AmRegex}|{PmRegexFull}|{OclockRegex})
  references: [ AmRegex, PmRegexFull, OclockRegex ]
BasicTime: !nestedRegex
  def: \b(?<basictime>{WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}:{BaseDateTime.MinuteRegex}(:{BaseDateTime.SecondRegex})?|{BaseDateTime.HourRegex}(?![%\d]))
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex ]
MidnightRegex: !simpleRegex
  def: (?<midnight>mid\s*(-\s*)?natt)
MidmorningRegex: !simpleRegex
  def: (?<midmorning>mid\s*(-\s*)?morning)
MidafternoonRegex: !simpleRegex
  def: (?<midafternoon>mid\s*(-\s*)?afternoon)
MiddayRegex: !simpleRegex
  def: (?<midday>middag|((12\s)?på dagen))
MidTimeRegex: !nestedRegex
  def: (?<mid>({MidnightRegex}|{MidmorningRegex}|{MidafternoonRegex}|{MiddayRegex}))
  references: [ MidnightRegex, MidmorningRegex, MidafternoonRegex, MiddayRegex ]
AtRegex: !nestedRegex
  def: \b(?:(?:(?<=\bvid\s+)(?:{WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}(?!\.\d)(\s*((?<iam>a)|(?<ipm>p)))?|{MidTimeRegex}))|{MidTimeRegex})\b
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, MidTimeRegex ]
IshRegex: !nestedRegex
  def: '\b({BaseDateTime.HourRegex}(-|——)?ungefär|middag(stid)?)\b'
  references: [ BaseDateTime.HourRegex ]
TimeUnitRegex: !simpleRegex
  def: ([^A-Za-z]{1,}|\b)(?<unit>tim|h|min(uter)?|sek(und)?(er)?)\b
RestrictedTimeUnitRegex: !simpleRegex
  def: (?<unit>timme|minut)\b
FivesRegex: !simpleRegex
  def: (?<tens>(?:femton|(?:tjugo|trettio|fyrtio|femtio)(\s*fem)?|tio|fem))\b
HourRegex: !nestedRegex
  def: \b{BaseDateTime.HourRegex}
  references: [ BaseDateTime.HourRegex ]
PeriodHourNumRegex: !simpleRegex
  def: \b(?<hour>twenty(\s+(ett|två|tre|fyra))?|elva|tolv|tretton|femton|arton|(fjor|sex|sjut|nit)(ton)?|noll|ett|två|tre|fem|åtta|tio)\b
ConnectNumRegex: !nestedRegex
  def: '\b{BaseDateTime.HourRegex}(?<min>[0-5][0-9])\s*{DescRegex}'
  references: [ BaseDateTime.HourRegex, DescRegex ]
TimeRegexWithDotConnector: !nestedRegex
  def: ({BaseDateTime.HourRegex}(\s*\.\s*){BaseDateTime.MinuteRegex})
  references: [ BaseDateTime.HourRegex, BaseDateTime.MinuteRegex ]
TimeRegex1: !nestedRegex
  def: \b({TimePrefix}\s+)?({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex})(\s*|[.]){DescRegex}
  references: [ TimePrefix, WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, DescRegex ]
TimeRegex2: !nestedRegex
  def: (\b{TimePrefix}\s+)?(t)?{BaseDateTime.HourRegex}(\s*)?:(\s*)?{BaseDateTime.MinuteRegex}((\s*)?:(\s*)?{BaseDateTime.SecondRegex})?(?<iam>a)?((\s*{DescRegex})|\b)
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex, DescRegex ]
TimeRegex3: !nestedRegex
  def: (\b{TimePrefix}\s+)?{BaseDateTime.HourRegex}\.{BaseDateTime.MinuteRegex}(\s*{DescRegex})
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
TimeRegex4: !nestedRegex
  def: \b{TimePrefix}\s+{BasicTime}(\s*{DescRegex})?\s+{TimeSuffix}\b
  references: [ TimePrefix, BasicTime, DescRegex, TimeSuffix ]
TimeRegex5: !nestedRegex
  def: \b{TimePrefix}\s+{BasicTime}((\s*{DescRegex})|\b)
  references: [ TimePrefix, BasicTime, DescRegex ]
TimeRegex6: !nestedRegex
  def: '{BasicTime}(\s*{DescRegex})?\s+{TimeSuffix}\b'
  references: [ BasicTime, DescRegex, TimeSuffix ]
TimeRegex7: !nestedRegex
  def: \b{TimeSuffixFull}\s+(vid\s+)?{BasicTime}((\s*{DescRegex})|\b)
  references: [ TimeSuffixFull, BasicTime, DescRegex ]
TimeRegex8: !nestedRegex
  def: .^
  references: [ TimeSuffixFull, BasicTime, DescRegex ]
TimeRegex9: !nestedRegex
  def: \b{PeriodHourNumRegex}(\s+|-){FivesRegex}((\s*{DescRegex})|\b)
  references: [ PeriodHourNumRegex, FivesRegex, DescRegex ]
TimeRegex10: !nestedRegex
  def: \b({TimePrefix}\s+)?{BaseDateTime.HourRegex}(\s*h\s*){BaseDateTime.MinuteRegex}(\s*{DescRegex})?
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
TimeRegex11: !nestedRegex
  def: \b((?:({TimeTokenPrefix})?{TimeRegexWithDotConnector}(\s*{DescRegex}))|(?:(?:{TimeTokenPrefix}{TimeRegexWithDotConnector})(?!\s*procent|%)))
  references: [ TimeTokenPrefix, TimeRegexWithDotConnector, DescRegex ]
FirstTimeRegexInTimeRange: !nestedRegex
  def: \b{TimeRegexWithDotConnector}(\s*{DescRegex})?
  references: [ TimeRegexWithDotConnector, DescRegex ]
PureNumFromTo: !nestedRegex
  def: ({RangePrefixRegex}\s+)?({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?\s*{TillRegex}\s*({HourRegex}|{PeriodHourNumRegex})(?<rightDesc>\s*({PmRegex}|{AmRegex}|{DescRegex}))?
  references: [ HourRegex, PeriodHourNumRegex, DescRegex, TillRegex, PmRegex, AmRegex, RangePrefixRegex ]
PureNumBetweenAnd: !nestedRegex
  def: (between\s+)(({BaseDateTime.TwoDigitHourRegex}{BaseDateTime.TwoDigitMinuteRegex})|{HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?\s*{RangeConnectorRegex}\s*(({BaseDateTime.TwoDigitHourRegex}{BaseDateTime.TwoDigitMinuteRegex})|{HourRegex}|{PeriodHourNumRegex})(?<rightDesc>\s*({PmRegex}|{AmRegex}|{DescRegex}))?
  references: [ HourRegex, PeriodHourNumRegex, BaseDateTime.TwoDigitHourRegex, BaseDateTime.TwoDigitMinuteRegex, DescRegex, PmRegex, AmRegex, RangeConnectorRegex ]
SpecificTimeFromTo: !nestedRegex
  def: ({RangePrefixRegex}\s+)?(?<time1>(({TimeRegex2}|{FirstTimeRegexInTimeRange})|({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?))\s*{TillRegex}\s*(?<time2>(({TimeRegex2}|{TimeRegexWithDotConnector}(?<rightDesc>\s*{DescRegex}))|({HourRegex}|{PeriodHourNumRegex})(\s*(?<rightDesc>{DescRegex}))?))
  references: [ TimeRegex2, FirstTimeRegexInTimeRange, TimeRegexWithDotConnector, TillRegex, HourRegex, PeriodHourNumRegex, DescRegex, PmRegex, AmRegex, RangePrefixRegex ]
SpecificTimeBetweenAnd: !nestedRegex
  def: (between\s+)(?<time1>(({TimeRegex2}|{FirstTimeRegexInTimeRange})|({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?))\s*{RangeConnectorRegex}\s*(?<time2>(({TimeRegex2}|{TimeRegexWithDotConnector}(?<rightDesc>\s*{DescRegex}))|({HourRegex}|{PeriodHourNumRegex})(\s*(?<rightDesc>{DescRegex}))?))
  references: [ TimeRegex2, FirstTimeRegexInTimeRange, TimeRegexWithDotConnector, RangeConnectorRegex, HourRegex, PeriodHourNumRegex, DescRegex, PmRegex, AmRegex ]
SuffixAfterRegex: !simpleRegex
  def: \b(((vid)\s)?(eller|och)\s+(över|efter|senare|större)(?!\s+än))\b
PrepositionRegex: !simpleRegex
  def: (?<prep>^(vid|på|av)(\s+den)?$)
LaterEarlyRegex: !simpleRegex
  def: ((?<early>årliga?(\s+|-))|(?<late>sen((are)?\s+|-)))
MealTimeRegex: !simpleRegex
  def: \b(vid\s+)?(?<mealTime>frukost|brunch|lunch(\s*tid)?|middag(\s*tid)?|kvällsmat)\b
UnspecificTimePeriodRegex: !nestedRegex
  def: ({MealTimeRegex})
  references: [ MealTimeRegex ]
TimeOfDayRegex: !nestedRegex
  def: \b(?<timeOfDay>((((in\s+den\s+)?{LaterEarlyRegex}?(på\s+)?(morgonen|eftermiddagen|natten|kvällen)))|{MealTimeRegex}|(((under\s+)?)(dagtid))))\b
  references: [ LaterEarlyRegex, MealTimeRegex ]
SpecificTimeOfDayRegex: !nestedRegex
  def: \b(({StrictRelativeRegex}\s+{TimeOfDayRegex})\b|\bi(\s+)?kväll)\b
  references: [ TimeOfDayRegex, StrictRelativeRegex ]
TimeFollowedUnit: !nestedRegex
  def: ^\s*{TimeUnitRegex}
  references: [ TimeUnitRegex ]
TimeNumberCombinedWithUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?){TimeUnitRegex}
  references: [ TimeUnitRegex ]
BusinessHourSplitStrings: ['business', 'hour']
NowRegex: !simpleRegex
  def: \b(?<now>(just\s+)?nu|så snart som möjligt|snarast|asap|nyligen|tidigare)\b
#Used in DatePeriodParser to parse patterns like "from March to date" ("^date$" is English specific and does not need to be translated).
NowParseRegex: !nestedRegex
  def: \b({NowRegex}|^(date)$)\b
  references: [ NowRegex ]
SuffixRegex: !simpleRegex
  def: ^\s*(på\s+)?(morgonen|eftermiddagen|kvällen|natten)\b
NonTimeContextTokens: !simpleRegex
  def: (byggnad(en)?)
DateTimeTimeOfDayRegex: !simpleRegex
  def: \b(?<timeOfDay>morning|(?<pm>eftermiddag(en)?|natt(en)?|kväll(en)?))\b
DateTimeSpecificTimeOfDayRegex: !nestedRegex
  def: \b(({RelativeRegex}\s+{DateTimeTimeOfDayRegex})\b|\bi(\s+)?kväll)\b
  references: [ DateTimeTimeOfDayRegex, RelativeRegex ]
TimeOfTodayAfterRegex: !nestedRegex
  def: ^\s*(,\s*)?(in\s+)?{DateTimeSpecificTimeOfDayRegex}
  references: [ DateTimeSpecificTimeOfDayRegex ]
TimeOfTodayBeforeRegex: !nestedRegex
  def: '{DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+(vid|runt|om|på))?\s*$'
  references: [ DateTimeSpecificTimeOfDayRegex ]
SimpleTimeOfTodayAfterRegex: !nestedRegex
  def: (?<!{NonTimeContextTokens}\s*)\b({HourNumRegex}|{BaseDateTime.HourRegex})\s*(,\s*)?(om\s+)?{DateTimeSpecificTimeOfDayRegex}\b
  references: [ NonTimeContextTokens, HourNumRegex, BaseDateTime.HourRegex, DateTimeSpecificTimeOfDayRegex ]
SimpleTimeOfTodayBeforeRegex: !nestedRegex
  def: '\b{DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+(vid|runt))?\s*({HourNumRegex}|{BaseDateTime.HourRegex})\b'
  references: [ DateTimeSpecificTimeOfDayRegex, HourNumRegex, BaseDateTime.HourRegex ]
SpecificEndOfRegex: !simpleRegex
  def: (i\s+)?slutet av\s*$
UnspecificEndOfRegex: !simpleRegex
  def: \b(i\s+)?(slutet av dagen)\b
UnspecificEndOfRangeRegex: !simpleRegex
  def: \b(eoy)\b
PeriodTimeOfDayRegex: !nestedRegex
  def: \b((i)?{LaterEarlyRegex}?(detta\s+)?{DateTimeTimeOfDayRegex})\b
  references: [ DateTimeTimeOfDayRegex, LaterEarlyRegex ]
PeriodSpecificTimeOfDayRegex: !nestedRegex
  def: \b({LaterEarlyRegex}?detta\s+{DateTimeTimeOfDayRegex}|({StrictRelativeRegex}\s+{PeriodTimeOfDayRegex})\b|\bi(\s+)?kväll)\b
  references: [ PeriodTimeOfDayRegex, StrictRelativeRegex, DateTimeTimeOfDayRegex, LaterEarlyRegex ]
PeriodTimeOfDayWithDateRegex: !nestedRegex
 def: \b(({PeriodTimeOfDayRegex}(\s+(på|av))?))\b
 references: [ PeriodTimeOfDayRegex ]
LessThanRegex: !simpleRegex
  def: \b(mindre\s+än)\b
MoreThanRegex: !simpleRegex
  def: \b(mer\s+än)\b
DurationUnitRegex: !nestedRegex
  def: (?<unit>{DateUnitRegex}|timmar|tim|h|min(ut)?(er)?|sek(und)?(er)?|nätter?)\b
  references: [ DateUnitRegex ]
SuffixAndRegex: !simpleRegex
  def: (?<suffix>\s*(och)\s+(en?\s+)?(?<suffix_num>halv|kvart))
PeriodicRegex: !simpleRegex
  def: \b(?<periodic>((?<multiplier>semi|bi|tri)(\s*|-))?(daglig|månatliga|vecka|kvartal|årlig(a|en)?))\b
EachUnitRegex: !nestedRegex
  def: (?<each>(varje|var|vilken)(?<other>\s+anna(n|t))?\s+({DurationUnitRegex}|(?<specialUnit>kvartal|veckoslut|helg(er)?)|{WeekDayRegex}))
  references: [ DurationUnitRegex, WeekDayRegex ]
EachPrefixRegex: !simpleRegex
  def: \b(?<each>(varje|var)\s*$)
SetEachRegex: !simpleRegex
  def: \b(?<each>(varje|var)(?<other>\s+annan(n|t))?\s*)\b
SetLastRegex: !nestedRegex
  def: (?<last>följande|nästa|kommande|denna|{LastNegPrefix}senaste|förra|tidigare|nuvarande)
  references: [ LastNegPrefix ]
EachDayRegex: !simpleRegex
  def: ^\s*(varje|var)\s*dag\b
DurationFollowedUnit: !nestedRegex
  def: (^\s*{DurationUnitRegex}\s+{SuffixAndRegex})|(^\s*{SuffixAndRegex}?(\s+|-)?{DurationUnitRegex})
  references: [ SuffixAndRegex, DurationUnitRegex ]
NumberCombinedWithDurationUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?)(-)?{DurationUnitRegex}
  references: [ DurationUnitRegex ]
AnUnitRegex: !nestedRegex
  def: (\b((?<half>(halv)\s+)?an?|another)|(?<half>(1/2|½|halv)))\s+{DurationUnitRegex}
  references: [ DurationUnitRegex ]
DuringRegex: !simpleRegex
  def: \b(för|under)\s+(?<unit>året|månaden|veckan|dagen)\b
AllRegex: !simpleRegex
  def: \b(?<all>(hela?)(\s+|-)(?<unit>året|månaden|veckan|dag(en)?))\b
HalfRegex: !simpleRegex
  def: \b(?<half>halv-?\s*?(?<unit>år|månad|vecka|dah|timme))\b
ConjunctionRegex: !simpleRegex
  def: \b((och(\s+under)?)|with)\b
# Major holidays + holiday w/ weekday in name
HolidayList1: !simpleRegex
  def: (?<holiday>mardi gras|(washington|mao)'s birthday|juneteenth|(jubilee|freedom)(\s+day)|chinese new year|(new\s+(years'|year\s*'s|years?)\s+eve)|(new\s+(years'|year\s*'s|years?)(\s+day)?)|may\s*day|yuan dan|christmas eve|(christmas|xmas)(\s+day)?|black friday|yuandan|easter(\s+(sunday|saturday|monday))?|clean monday|ash wednesday|palm sunday|maundy thursday|good friday|white\s+(sunday|monday)|trinity sunday|pentecost|corpus christi|cyber monday)
# Extra religious or local holidays
HolidayList2: !simpleRegex
  def: (?<holiday>(thanks\s*giving|all saint's|white lover|s(?:ain)?t?(\.)?\s+(?:patrick|george)(?:')?(?:s)?|us independence|all hallow|all souls|guy fawkes|cinco de mayo|halloween|qingming|dragon boat|april fools|tomb\s*sweeping)(\s+day)?)
# General holidays (must be followed by "day")
HolidayList3: !simpleRegex
  def: (?<holiday>(?:independence|presidents(?:')?|mlk|martin luther king( jr)?|canberra|ascension|columbus|tree( planting)?|arbor|labou?r|((international|int'?l)\s+)?workers'?|mother'?s?|father'?s?|female|women('s)?|single|teacher'?s|youth|children|girls|lovers?|earth|inauguration|groundhog|valentine'?s|baptiste|bastille|veterans(?:')?|memorial|mid[ \-]autumn|moon|spring|lantern)\s+day)
# Combined holiday regex
HolidayRegex: !nestedRegex
  def: \b(({StrictRelativeRegex}\s+({HolidayList1}|{HolidayList2}|{HolidayList3}))|(({HolidayList1}|{HolidayList2}|{HolidayList3})(\s+(of\s+)?({YearRegex}|{RelativeRegex}\s+year))?))\b
  references: [ HolidayList1, HolidayList2, HolidayList3, YearRegex, RelativeRegex, StrictRelativeRegex ]
AMTimeRegex: !simpleRegex
  def: (?<am>morgon(en)?)
PMTimeRegex: !simpleRegex
  def: \b(?<pm>eftermiddag(en)?|kväll(en)?|natt(en)?)\b
NightTimeRegex: !simpleRegex
  def: (natt(en)?)
NowTimeRegex: !simpleRegex
  def: ((just\s+)?nu)
RecentlyTimeRegex: !simpleRegex
  def: (nyligen|tidigare)
AsapTimeRegex: !simpleRegex
  def: (så tidigt som möjligt|snarast|asap)
InclusiveModPrepositions: !simpleRegex
  def: (?<include>((på|under|vid)\s+eller\s+)|(\s+eller\s+(på|under|vid)))
AroundRegex: !simpleRegex
  def: (?:\b(?:runt|circa|ungefär)\s*?\b)(\s+den)?
BeforeRegex: !nestedRegex
  def: ((\b{InclusiveModPrepositions}?(?:före|i\s+förväg|(ej\s+senare|tidigare|före)\s+|som\s+slutar\s+(med|på|den)|tills|(?<include>så\s+sent\s+som)){InclusiveModPrepositions}?\b\s*?)|(?<!\w|>)((?<include><\s*=)|<))(\s+den)?
  references: [ InclusiveModPrepositions ]
# "starting from" is SinceRegex
AfterRegex: !nestedRegex
  def: ((\b{InclusiveModPrepositions}?((efter|(börjar|startar|början)(\s+(av|på|den))?(?!\sfrom)|(?<!ej\s+)senare än)|(år större än))(?!\s+lika med){InclusiveModPrepositions}?\b\s*?)|(?<!\w|<)((?<include>>\s*=)|>))(\s+den)?
  references: [ InclusiveModPrepositions ]
SinceRegex: !simpleRegex
  def: (?:(?:\b(?:sedan|efter\s+eller\s+lika\s+med|börjar\s+(?:from|från|på|med)|så\s+tidigt\s+som|(närsomhelst\s+)från)\b\s*?)|(?<!\w|<)(>=))(\s+den)?
SinceRegexExp: !nestedRegex
  def: ({SinceRegex}|\bfrån(\s+den)?\b)
  references: [ SinceRegex ]
AgoRegex: !simpleRegex
  def: \b(sedan|före\s+(?<day>i\s+?går|i\s+?dag))\b
LaterRegex: !nestedRegex
  def: \b(?:senare(?!((\s+på)?\s*{OneWordPeriodRegex})|(\s+{TimeOfDayRegex}))|från nu|(från|efter) (?<day>i\s+?morgon|i\s+?dag))\b
  references: [ OneWordPeriodRegex, TimeOfDayRegex ]
InConnectorRegex: !simpleRegex
  def: \b(i)\b
SinceYearSuffixRegex: !nestedRegex
  def: (^\s*{SinceRegex}(\s*år\s*)?{YearSuffix})
  references: [ SinceRegex, YearSuffix ]
WithinNextPrefixRegex: !nestedRegex
  def: \b((i|under)(\s+(?<next>{NextPrefixRegex}))?)\b
  references: [ NextPrefixRegex ]
TodayNowRegex: !simpleRegex  # Added to remove hard coded strings in BaseDatePeriodParser
  def: \b(i\s+?dag|nu)\b
# "next" group here is used to judge uncommon unsupported cases like "within the next 5 days before today"
MorningStartEndRegex: !nestedRegex
  def: (^(morgon(en)?|{AmDescRegex}))|((morgon(en)?|{AmDescRegex})$)
  references: [ AmDescRegex ]
AfternoonStartEndRegex: !nestedRegex
  def: (^(eftermiddag(en)?|{PmDescRegex}))|((eftermiddag(en)?|{PmDescRegex})$)
  references: [ PmDescRegex ]
EveningStartEndRegex: !simpleRegex
  def: (^(kväll(en)?))|((kväll(en)?)$)
NightStartEndRegex: !simpleRegex
  def: (^(över|i)?\s+natt(en)?)|((över|i)?n\s+natt(en)?$)
InexactNumberRegex: !simpleRegex
  def: \b(några|flera|(?<NumTwoTerm>ett\s+par))\b
InexactNumberUnitRegex: !nestedRegex
  def: ({InexactNumberRegex})\s+({DurationUnitRegex})
  references: [InexactNumberRegex, DurationUnitRegex]
RelativeTimeUnitRegex: !nestedRegex
  def: (?:(?:(?:{NextPrefixRegex}|{PreviousPrefixRegex}|{ThisPrefixRegex})\s+({TimeUnitRegex}))|((the|my))\s+({RestrictedTimeUnitRegex}))
  references: [NextPrefixRegex, PreviousPrefixRegex, ThisPrefixRegex, TimeUnitRegex, RestrictedTimeUnitRegex]
RelativeDurationUnitRegex: !nestedRegex
  def: (?:(?:(?<=({NextPrefixRegex}|{PreviousPrefixRegex}|{ThisPrefixRegex})\s+)({DurationUnitRegex}))|((the|my))\s+({RestrictedTimeUnitRegex}))
  references: [NextPrefixRegex, PreviousPrefixRegex, ThisPrefixRegex, DurationUnitRegex, RestrictedTimeUnitRegex]
ReferenceDatePeriodRegex: !nestedRegex
  def: \b{ReferencePrefixRegex}\s+(?<duration>vecka|månad|år(\s+?tionde)?|weekend|helg)\b
  references: [ReferencePrefixRegex]
ConnectorRegex: !simpleRegex
  def: ^(-|,|runt|omkring|@)$
FromToRegex: !simpleRegex
  def: (\b(från).+(till|och|eller)\b.+)
SingleAmbiguousMonthRegex: !simpleRegex
  def: ^(maj|mars)$
# Filter ambiguous single word datetime extractions in CalendarMode or when adding a modifier
SingleAmbiguousTermsRegex: !simpleRegex
  def: ^(dag(en)?|veckan?|månad(en)?|år(et)?)$
UnspecificDatePeriodRegex: !simpleRegex
  def: ^(veckan?|månad(en)?|år(et)?)$
PrepositionSuffixRegex: !simpleRegex
  def: \b(on|in|at|around|from|to)$
FlexibleDayRegex: !simpleRegex
  def: (?<DayOfMonth>([A-Za-z]+\s)?[A-Za-z\d]+)
ForTheRegex: !nestedRegex
  def: \b((((?<=for\s+)the\s+{FlexibleDayRegex})|((?<=on\s+)(the\s+)?{FlexibleDayRegex}(?<=(st|nd|rd|th))))(?<end>\s*(,|\.(?!\d)|!|\?|$)))
  references: [FlexibleDayRegex]
WeekDayAndDayOfMonthRegex: !nestedRegex
  def: \b{WeekDayRegex}\s+(the\s+{FlexibleDayRegex})\b
  references: [WeekDayRegex, FlexibleDayRegex]
WeekDayAndDayRegex: !nestedRegex
  def: \b{WeekDayRegex}\s+(?!(the)){DayRegex}(?!([-:]|(\s+({AmDescRegex}|{PmDescRegex}|{OclockRegex}))))\b
  references: [WeekDayRegex, DayRegex, AmDescRegex, PmDescRegex, OclockRegex]
RestOfDateRegex: !simpleRegex
  def: \b(resten|återstoden)\s+(av\s+)?((de(tt|nn)a|nuvarande)\s+)?(?<duration>veckan|månaden|året|decenniet)\b
RestOfDateTimeRegex: !simpleRegex
  def: \b(resten|återstoden)\s+(av\s+)?((denna|nuvarande)\s+)?(?<unit>day)\b
AmbiguousRangeModifierPrefix: !simpleRegex
  def: (från)
NumberEndingPattern: !nestedRegex
  def: ^(?:\s+(?<meeting>möte|konferens|((skype|teams|zoom|facetime)\s+)?(samtal|möte))\s+till\s+(?<newTime>{PeriodHourNumRegex}|{HourRegex})([\.]?$|(\.,|,|!|\?)))
  references: [PeriodHourNumRegex, HourRegex]
OneOnOneRegex: !simpleRegex
  def: \b(1\s*:\s*1(?!\d))|(one (on )?one|one\s*-\s*one|one\s*:\s*one)\b
LaterEarlyPeriodRegex: !nestedRegex
  def: \b(({PrefixPeriodRegex})\s*\b\s*(?<suffix>{OneWordPeriodRegex}|(?<FourDigitYear>{BaseDateTime.FourDigitYearRegex}))|({UnspecificEndOfRangeRegex}))\b
  references: [PrefixPeriodRegex, OneWordPeriodRegex, BaseDateTime.FourDigitYearRegex, UnspecificEndOfRangeRegex]
WeekWithWeekDayRangeRegex: !nestedRegex
  def: \b((?<week>({NextPrefixRegex}|{PreviousPrefixRegex}|denna)\s+veckan?)((\s+mellan\s+{WeekDayRegex}\s+och\s+{WeekDayRegex})|(\s+från\s+{WeekDayRegex}\s+till\s+{WeekDayRegex})))\b
  references: [NextPrefixRegex, PreviousPrefixRegex, WeekDayRegex]
GeneralEndingRegex: !simpleRegex
  def: ^\s*((\.,)|\.|,|!|\?)?\s*$
MiddlePauseRegex: !simpleRegex
  def: \s*(,)\s*
DurationConnectorRegex: !simpleRegex
  def: ^\s*(?<connector>\s+|och|,)\s*$
PrefixArticleRegex: !simpleRegex
  def: \bden\s+
OrRegex: !simpleRegex
  def: \s*((\b|,\s*)(eller|och)\b|,)\s*
SpecialYearTermsRegex: !nestedRegex
  def: \b((({SpecialYearPrefixes}\s+)?år)|(cy|(?<special>räkenskapsår(et)?|bokföringsår(et)?|läsår(et)?|skolår(et)?)))
  references: [ SpecialYearPrefixes ]
YearPlusNumberRegex: !nestedRegex
  def: \b({SpecialYearTermsRegex}\s*((?<year>(\d{2,4}))|{FullTextYearRegex}))\b
  references: [ FullTextYearRegex, SpecialYearTermsRegex ]
NumberAsTimeRegex: !nestedRegex
  def: \b({WrittenTimeRegex}|{PeriodHourNumRegex}|{BaseDateTime.HourRegex})\b
  references: [ WrittenTimeRegex, PeriodHourNumRegex, BaseDateTime.HourRegex ]
TimeBeforeAfterRegex: !nestedRegex
  def: \b(((?<=\b(före|(inte|ej) senare än|till|efter)\s+)({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}|{MidTimeRegex}))|{MidTimeRegex})\b
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, MidTimeRegex ]
DateNumberConnectorRegex: !simpleRegex
  def: ^\s*(?<connector>\s+vid)\s*$
DecadeRegex: !simpleRegex
  def: (?<decade>(?:tio|tjugo|trettio|fyrtio|femtio|sextio|sjuttio|åttio|nittio)|tvåtusen|tjugohundra)
DecadeWithCenturyRegex: !nestedRegex
  def: (det\s+)?(((?<century>\d|1\d|2\d)?(')?(?<decade>\d0)(')?(\s)?s\b)|(({CenturyRegex}(\s+|-)(och\s+)?)?{DecadeRegex})|({CenturyRegex}(\s+|-)(och\s+)?(?<decade>tio|hundra)))
  references: [ CenturyRegex, DecadeRegex ]
RelativeDecadeRegex: !nestedRegex
  def: \b((det\s+)?{RelativeRegex}\s+((?<number>[\w,]+)\s+)?decenni(um|et|er))\b
  references: [ RelativeRegex ]
YearPeriodRegex: !nestedRegex
  def: ((((från|under|in)\s+)?{YearRegex}\s*({TillRegex})\s*{YearRegex})|(((mellan)\s+){YearRegex}\s*({RangeConnectorRegex})\s*{YearRegex}))
  references: [ YearRegex, TillRegex, RangeConnectorRegex ]
StrictTillRegex: !nestedRegex
  def: (?<till>\b(t.o.m.|tom|tillochmed|till och med|till)\b|{BaseDateTime.RangeConnectorSymbolRegex}(?!\s*(h[1-2]|q[1-4])(?!(\s+av|\s*,\s*))))
  references: [ BaseDateTime.RangeConnectorSymbolRegex ]
StrictRangeConnectorRegex : !nestedRegex
  def: (?<and>\b(och|till|tom)\b|{BaseDateTime.RangeConnectorSymbolRegex}(?!\s*(h[1-2]|q[1-4])(?!(\s+av|\s*,\s*))))
  references: [ BaseDateTime.RangeConnectorSymbolRegex ]
StartMiddleEndRegex: !simpleRegex
  def: \b((?<StartOf>((starten|början)\s+(av|på)\s+)?)(?<MiddleOf>(mitten\s+av\s+)?)(?<EndOf>(slutet\s+av\s+)?))
ComplexDatePeriodRegex: !nestedRegex
  def: (?:((från|under|i)\s+)?{StartMiddleEndRegex}(?<start>.+)\s*({StrictTillRegex})\s*{StartMiddleEndRegex}(?<end>.+)|((mellan)\s+){StartMiddleEndRegex}(?<start>.+)\s*({StrictRangeConnectorRegex})\s*{StartMiddleEndRegex}(?<end>.+))
  references: [ StrictTillRegex, StrictRangeConnectorRegex, StartMiddleEndRegex ]
# Do not localize FailFastRegex to other cultures at this momment. Experimental feature. To be improved.
FailFastRegex: !nestedRegex
  def: '{BaseDateTime.DeltaMinuteRegex}|\b(?:{BaseDateTime.BaseAmDescRegex}|{BaseDateTime.BasePmDescRegex})|{BaseDateTime.BaseAmPmDescRegex}|\b(?:noll|{WrittenOneToNineRegex}|{WrittenElevenToNineteenRegex}|{WrittenTensRegex}|{WrittenMonthRegex}|{SeasonDescRegex}|{DecadeRegex}|centur(y|ies)|weekends?|quarters?|hal(f|ves)|yesterday|to(morrow|day|night)|tmr|noonish|\d(-|——)?ish|((the\s+\w*)|\d)(th|rd|nd|st)|(mid\s*(-\s*)?)?(night|morning|afternoon|day)s?|evenings?||noon|lunch(time)?|dinner(time)?|(day|night)time|overnight|dawn|dusk|sunset|hours?|hrs?|h|minutes?|mins?|seconds?|secs?|eo[dmy]|mardi[ -]?gras|birthday|eve|christmas|xmas|thanksgiving|halloween|yuandan|easter|yuan dan|april fools|cinco de mayo|all (hallow|souls)|guy fawkes|(st )?patrick|hundreds?|noughties|aughts|thousands?)\b|{WeekDayRegex}|{SetWeekDayRegex}|{NowRegex}|{PeriodicRegex}|\b({DateUnitRegex}|{ImplicitDayRegex})'
  references: [ BaseDateTime.DeltaMinuteRegex, BaseDateTime.BaseAmDescRegex, BaseDateTime.BasePmDescRegex, BaseDateTime.BaseAmPmDescRegex, ImplicitDayRegex, DateUnitRegex, WeekDayRegex, SetWeekDayRegex, NowRegex, PeriodicRegex, DecadeRegex, SeasonDescRegex, WrittenMonthRegex, WrittenTensRegex, WrittenElevenToNineteenRegex, WrittenOneToNineRegex ]
UnitMap: !dictionary
  types: [ string, string ]
  entries:
    millennium: 1000Y
    millennier: 1000Y
    årtusenden: 1000Y
    årtusende: 1000Y
    sekel: 100Y
    seklerna: 100Y
    seklen: 100Y
    decennium: 10Y
    decenniet: 10Y
    decennier: 10Y
    lustrum: 5Y
    åren: Y
    år: Y
    månaden: MON
    månaderna: MON
    månader: MON
    månad: MON
    kvartalen: 3MON
    kvartalet: 3MON
    kvartal: 3MON
    halvåret: 6MON
    halvår: 6MON
    veckorna: W
    veckor: W
    veckan: W
    vecka: W
    weekends: WE
    weekend: WE
    helgerna: WE
    helger: WE
    helgen: WE
    helg: WE
    veckolsuten: WE
    veckoslutet: WE
    veckoslut: WE
    veckodagarna: D
    veckodagar: D
    veckodagen: D
    veckodag: D
    dagarna: D
    dagar: D
    dagen: D
    dag: D
    halvdagarna: 12H
    halvdagen: 12H
    halvdagar: 12H
    halvdag: 12H
    dygnen: 24H
    dygn: 24H
    nätterna: D
    nätter: D
    natten: D
    natt: D
    timmarna: H
    timmar: H
    timmen: H
    timme: H
    tim: H
    halvtimmarna: 30M
    halvtimmen: 30M
    halvtimmar: 30M
    halvtimme: 30M
    hrs: H
    hr: H
    h: H
    kvarten: 15M
    kvart: 15M
    minuterna: M
    minuter: M
    minuten: M
    minut: M
    min: M
    sekunderna: S
    sekunder: S
    sekunden: S
    sekund: S
    sek: S
    s: S
#UnitValueMap - The value for a unit is calculated from seconds, e.g. hour = 3600 seconds, day = 86400 seconds.
UnitValueMap: !dictionary
  types: [ string, long ]
  entries:
    millennium: 31536000000
    millennier: 31536000000
    årtusenden: 31536000000
    årtusende: 31536000000  
    sekel: 3153600000
    seklerna: 3153600000
    sekel: 3153600000
    decennium: 315360000
    decenniet: 315360000
    decennier: 315360000
    lustrum: 157680000
    åren: 31536000
    året: 31536000
    år: 31536000
    månaden: 2592000
    månaderna: 2592000
    månader: 2592000
    månad: 2592000
    weekends: 172800
    weekend: 172800
    helgerna: 172800
    helger: 172800
    helgen: 172800
    helg: 172800
    veckolsuten: 172800
    veckoslutet: 172800
    veckoslut: 172800
    veckorna: 604800
    veckor: 604800
    veckan: 604800
    vecka: 604800
    dygnen: 86400
    dygn: 86400
    dagarna: 86400
    dagar: 86400
    dagen: 86400
    dag: 86400
    nätterna: 86400
    nätter: 86400
    natten: 86400
    natt: 86400
    halvdagarna: 43200
    halvdagen: 43200
    halvdagar: 43200
    halvdag: 43200
    timmarna: 3600
    timmar: 3600
    timmen: 3600
    timme: 3600
    tim: 3600
    halvtimmarna: 1800
    halvtimmen: 1800
    halvtimmar: 1800
    halvtimme: 1800
    hrs: 3600
    hr: 3600
    h: 3600
    kvarten: 900
    kvart: 900
    minuterna: 60
    minuter: 60
    minuten: 60
    minut: 60
    min: 60
    sekunderna: 1
    sekunder: 1
    sekunden: 1
    sekund: 1
    secs: 1
    sec: 1
SpecialYearPrefixesMap: !dictionary
  types: [ string, string ]
  entries:
    räkenskapsåret: FY
    räkenskapsår: FY
    bokföringsåret: FY
    bokföringsår: FY
    skolåret: SY
    skolår: SY
    läsåret: SY
    läsår: SY
SeasonMap: !dictionary
  types: [ string, string ]
  entries:
    vår: SP
    sommar: SU
    höst: FA
    vinter: WI
SeasonValueMap: !dictionary
  types: [ string, int ]
  entries:
    SP: 3
    SU: 6
    FA: 9
    WI: 12
CardinalMap: !dictionary
  types: [ string, int]
  entries:
    första: 1
    förste: 1
    1\:a: 1
    1\:e: 1
    andra: 2
    andre: 2
    2\:a: 2
    2\:e: 2
    tredje: 3
    3\:e: 3
    fjärde: 4
    4\:e: 4
    femte: 5
    5\:e: 5
DayOfWeek: !dictionary
  types: [ string, int ]
  entries: 
    måndag: 1
    månd: 1
    mån: 1
    må: 1
    tisdag: 2
    tisd: 2
    tis: 2
    ti: 2
    onsdag: 3
    onsd: 3
    ons: 3
    on: 3
    torsdag: 4
    torsd: 4
    tors: 4
    tor: 4
    to: 4
    fredag: 5
    fred: 5
    fre: 5
    fr: 5
    lördag: 6
    lörd: 6
    lör: 6
    lö: 6
    söndag: 0
    sönd: 0
    sön: 0
    sö: 0
MonthOfYear: !dictionary
  types: [ string, int ]
  entries:
    'januari': 1
    'februari': 2
    'mars': 3
    'april': 4
    'maj': 5
    'juni': 6
    'juli': 7
    'augusti': 8
    'september': 9
    'oktober': 10
    'november': 11
    'december': 12
    'jan': 1
    'feb': 2
    'mar': 3
    'apr': 4
    'jun': 6
    'jul': 7
    'aug': 8
    'sep': 9
    'sept.': 9
    'sept': 9
    'okt': 10
    'nov': 11
    'dec': 12
    '1': 1
    '2': 2
    '3': 3
    '4': 4
    '5': 5
    '6': 6
    '7': 7
    '8': 8
    '9': 9
    '10': 10
    '11': 11
    '12': 12
    '01': 1
    '02': 2
    '03': 3
    '04': 4
    '05': 5
    '06': 6
    '07': 7
    '08': 8
    '09': 9
Numbers: !dictionary
  types: [ string, int ]
  entries:
    'noll': 0
    'ett': 1
    'en': 1
    'två': 2
    'tre': 3
    'fyra': 4
    'fem': 5
    'sex': 6
    'sju': 7
    'åtta': 8
    'nio': 9
    'tio': 10
    'elva': 11
    'tolv': 12
    'tretton': 13
    'fjorton': 14
    'femton': 15
    'sexton': 16
    'sjutton': 17
    'arton': 18
    'nitton': 19
    'tjugo': 20
    'tjugoett': 21
    'tjugoen': 21
    'tjugotvå': 22
    'tjugotre': 23
    'tjugofyra': 24
    'tjugofem': 25
    'tjugosex': 26
    'tjugosju': 27
    'tjugoåtta': 28
    'tjugonio': 29
    'trettio': 30
    'trettioett': 31
    'trettioen': 31
    'trettiotvå': 32
    'trettiotre': 33
    'trettiofyra': 34
    'trettiofem': 35
    'trettiosex': 36
    'trettiosju': 37
    'trettioåtta': 38
    'trettionio': 39
    'fyrtio': 40
    'fyrtioett': 41
    'fyrtioen': 41
    'fyrtiotvå': 42
    'fyrtiotre': 43
    'fyrtiofyra': 44
    'fyrtiofem': 45
    'fyrtiosex': 46
    'fyrtiosju': 47
    'fyrtioåtta': 48
    'fyrtionio': 49
    'femtio': 50
    'femtioett': 51
    'femtioen': 51
    'femtiotvå': 52
    'femtiotre': 53
    'femtiofyra': 54
    'femtiofem': 55
    'femtiosex': 56
    'femtiosju': 57
    'femtioåtta': 58
    'femtionio': 59
    'sextio': 60
    'sextioett': 61
    'sextioen': 61
    'sextiotvå': 62
    'sextiotre': 63
    'sextiofyra': 64
    'sextiofem': 65
    'sextiosex': 66
    'sextiosju': 67
    'sextioåtta': 68
    'sextionio': 69
    'sjuttio': 70
    'sjuttioett': 71
    'sjuttioen': 71
    'sjuttiotvå': 72
    'sjuttiotre': 73
    'sjuttiofyra': 74
    'sjuttiofem': 75
    'sjuttiosex': 76
    'sjuttiosju': 77
    'sjuttioåtta': 78
    'sjuttionio': 79
    'åttio': 80
    'åttioett': 81
    'åttioen': 81
    'åttiotvå': 82
    'åttiotre': 83
    'åttiofyra': 84
    'åttiofem': 85
    'åttiosex': 86
    'åttiosju': 87
    'åttioåtta': 88
    'åttionio': 89
    'nittio': 90
    'nittioett': 91
    'nittioen': 91
    'nittiotvå': 92
    'nittiotre': 93
    'nittiofyra': 94
    'nittiofem': 95
    'nittiosex': 96
    'nittiosju': 97
    'nittioåtta': 98
    'nittionio': 99
    'etthundra': 100
    'hundra': 100
DayOfMonth: !dictionary
  types: [ string, int ]
  entries:
    '1': 1
    '2': 2
    '3': 3
    '4': 4
    '5': 5
    '6': 6
    '7': 7
    '8': 8
    '9': 9
    '10': 10
    '11': 11
    '12': 12
    '13': 13
    '14': 14
    '15': 15
    '16': 16
    '17': 17
    '18': 18
    '19': 19
    '20': 20
    '21': 21
    '22': 22
    '23': 23
    '23': 23
    '24': 24
    '25': 25
    '26': 26
    '27': 27
    '28': 28
    '29': 29
    '30': 30
    '31': 31
DoubleNumbers: !dictionary
  types: [ string, double ]
  entries: 
    halvannan: 1.5
    halvannat: 1.5
    halva: 0.5
    halv: 0.5
    kvartal: 0.25
    kvarts: 0.25
    kvart: 0.25
    'tre kvarts': 0.75
    'tre kvart': 0.75
    trekvarts: 0.75
HolidayNames: !dictionary
  types: [ string, 'string[]' ]
  entries: 
    easterday: [ easterday, easter, eastersunday ]
    ashwednesday: [ ashwednesday ]
    palmsunday: [ palmsunday ]
    maundythursday: [ maundythursday ]
    goodfriday: [ goodfriday ]
    eastersaturday: [ eastersaturday ]
    eastermonday: [ eastermonday ]
    ascensionday: [ ascensionday ]
    whitesunday: [ whitesunday, pentecost, pentecostday ]
    whitemonday: [ whitemonday ]
    trinitysunday: [ trinitysunday ]
    corpuschristi: [ corpuschristi ]
    earthday: [ earthday ]
    fathers: [ fatherday, fathersday ]
    mothers: [ motherday, mothersday ]
    thanksgiving: [ thanksgivingday, thanksgiving ]
    blackfriday: [ blackfriday ]
    cybermonday: [ cybermonday ]
    martinlutherking: [ mlkday, martinlutherkingday, martinlutherkingjrday ]
    washingtonsbirthday: [ washingtonsbirthday, washingtonbirthday, presidentsday ]
    canberra: [ canberraday ]
    labour: [ labourday, laborday ]
    columbus: [ columbusday ]
    memorial: [ memorialday ]
    yuandan: [ yuandan ]
    maosbirthday: [ maosbirthday ]
    teachersday: [ teachersday, teacherday ]
    singleday: [ singleday ]
    allsaintsday: [ allsaintsday ]
    youthday: [ youthday ]
    childrenday: [ childrenday, childday ]
    femaleday: [ femaleday ]
    treeplantingday: [ treeplantingday ]
    arborday: [ arborday ]
    girlsday: [ girlsday ]
    whiteloverday: [ whiteloverday ]
    loverday: [ loverday, loversday ]
    christmas: [ christmasday, christmas ]
    xmas: [ xmasday, xmas ]
    newyear: [ newyear ]
    newyearday: [ newyearday ]
    newyearsday: [ newyearsday ]
    inaugurationday: [ inaugurationday ]
    groundhougday: [ groundhougday ]
    valentinesday: [ valentinesday ]
    stpatrickday: [ stpatrickday, stpatricksday, stpatrick ]
    aprilfools: [ aprilfools ]
    stgeorgeday: [ stgeorgeday ]
    mayday: [ mayday, intlworkersday, internationalworkersday, workersday ]
    cincodemayoday: [ cincodemayoday ]
    baptisteday: [ baptisteday ]
    usindependenceday: [ usindependenceday ]
    independenceday: [ independenceday ]
    bastilleday: [ bastilleday ]
    halloweenday: [ halloweenday, halloween ]
    allhallowday: [ allhallowday ]
    allsoulsday: [ allsoulsday ]
    guyfawkesday: [ guyfawkesday ]
    veteransday: [ veteransday ]
    christmaseve: [ christmaseve ]
    newyeareve: [ newyearseve, newyeareve ]
    juneteenth: [ juneteenth, freedomday, jubileeday]
WrittenDecades: !dictionary
  types: [ string, int ]
  entries:
    'hundratalet': 0
    'tiotalet': 10
    'tio-talet': 10
    'tjugotalet': 20
    'tjugo-talet': 20
    'trettiotalet': 30
    'trettio-talet': 30
    'fyrtio-talet': 40
    'fyrtiotalet': 40
    'femtiotalet': 50
    'femtio-talet': 50
    'sextiotalet': 60
    'sextio-talet': 60
    'sjuttiotalet': 70
    'sjuttio-talet': 70
    'åttiotalet': 80
    'åttio-talet': 80
    'nittiotalet': 90
    'nittio-talet': 90
    '00-talet': 0
    '10-talet': 10
    '20-talet': 20
    '30-talet': 30
    '40-talet': 40
    '50-talet': 50
    '60-talet': 60
    '70-talet': 70
    '80-talet': 80
    '90-talet': 90
SpecialDecadeCases: !dictionary
  types: [ string, int ]
  entries:
    'år 0': 0
    'år noll': 0
    '2000-talet': 2000
    'tjugohundratalet': 2000
    'tvåtusen talet': 2000
    'tvåtusentalet': 2000
    'tvåtusen-talet': 2000
    'tjugohundra': 2000
DefaultLanguageFallback: 'MDY'
SuperfluousWordList: !list
  types: [ string ]
  entries:
    - helst
    - hur skulle det vara
    - kanske
    - låt oss säga
    - typ
    - skulle föredra
# For DurationDateRestrictions, only translate these terms if this particular circumstance applies in the target language. If not, keep it empty. 
DurationDateRestrictions: [ today, now ]
# Cases collected from mined data
AmbiguityFiltersDict: !dictionary
  types: [ string, string ]
  entries:
    '^(morning|afternoon|evening|night|day)\b': '\b(good\s+(morning|afternoon|evening|night|day))|(nighty\s+night)\b'
    '\bnow\b': '\b(^now,)|\b((is|are)\s+now\s+for|for\s+now)\b'
    '\bmay\b': '\b((((!|\.|\?|,|;|)\s+|^)may i)|(i|you|he|she|we|they)\s+may|(may\s+((((also|not|(also not)|well)\s+)?(be|ask|contain|constitute|e-?mail|take|have|result|involve|get|work|reply|differ))|(or may not))))\b'
    '\b(a|one) second\b': '\b(?<!an?\s+)(a|one) second (round|time)\b'
    '\b(breakfast|brunch|lunch(time)?|dinner(time)?|supper)$': '(?<!\b(at|before|after|around|circa)\b\s)(breakfast|brunch|lunch|dinner|supper)(?!\s*time)'
    '^\d+m$': '^\d+m$'
# For TimeOfDay resolution
MorningTermList: !list
  types: [ string ]
  entries: 
    - morgon
    - ottan #traditionally used to denote "early in the morning"
AfternoonTermList: !list
  types: [ string ]
  entries: 
    - eftermiddag
    - efter lunch
EveningTermList: !list
  types: [ string ]
  entries: 
    - kväll
MealtimeBreakfastTermList: !list
  types: [ string ]
  entries: 
    - frukost
MealtimeBrunchTermList: !list
  types: [ string ]
  entries: 
    - brunch
MealtimeLunchTermList: !list
  types: [ string ]
  entries: 
    - lunchtid
    - lunch
MealtimeDinnerTermList: !list
  types: [ string ]
  entries: 
    - middagstid
    - middag
    - kvällsmat
DaytimeTermList: !list
  types: [ string ]
  entries: 
    - dagtid
    - på dagen
NightTermList: !list
  types: [ string ]
  entries: 
    - natt
    - på natten
SameDayTerms: !list
  types: [ string ]
  entries: 
    - idag
    - i dag
    - innevarande dag
PlusOneDayTerms: !list
  types: [ string ]
  entries: 
    - imorgon
    - i morgon
    - dagen efter
    - efterföljande dag
MinusOneDayTerms: !list
  types: [ string ]
  entries: 
    - igår
    - i går
    - dagen före
    - föregående dag
PlusTwoDayTerms: !list
  types: [ string ]
  entries: 
    - övermorgon
    - i övermorgon
    - dagen efter imorgon
    - dagen efter i morgon
MinusTwoDayTerms: !list
  types: [ string ]
  entries: 
    - förrgår
    - i förrgår
# For DatePeriodParserConfiguration
FutureTerms: !list
  types: [ string ]
  entries:
    - kommande
    - nästa
LastCardinalTerms: !list
  types: [ string ]
  entries:
    - förra
    - senaste
MonthTerms: !list
  types: [ string ]
  entries:
    - månad
    - månaden
MonthToDateTerms: !list
  types: [ string ]
  entries:
    - månaden fram till idag
    - månaden fram till i dag
    - månaden fram tills idag
    - månaden fram tills i dag
WeekendTerms: !list
  types: [ string ]
  entries:
    - weekend
    - helgen
    - helg
WeekTerms: !list
  types: [ string ]
  entries:
    - veckan
    - veckor
    - vecka
YearTerms: !list
  types: [ string ]
  entries:
    - år
GenericYearTerms: !list
  types: [ string ]
  entries: 
    - y
YearToDateTerms: !list
  types: [ string ]
  entries:
    - year to date
    - hittills under året
    - året hittills
# For SetParserConfiguration
DoubleMultiplierRegex: !simpleRegex
  def: ^(bi)(-|\s)?
HalfMultiplierRegex: !simpleRegex
  def: ^(semi)(-|\s)?
DayTypeRegex: !simpleRegex
  def: ((week)?da(il)?ys?)$
WeekTypeRegex: !simpleRegex
  def: (week(s|ly)?)$
WeekendTypeRegex: !simpleRegex
  def: (weekends?)$
MonthTypeRegex: !simpleRegex
  def: (månad(er)?|månatligen|varje månad)$
QuarterTypeRegex: !simpleRegex
  def: (quarter(s|ly)?)$
YearTypeRegex: !simpleRegex
  def: ((years?|annual)(ly)?)$
...
