//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     Generation parameters:
//     - DataFilename: Patterns\Swedish\Swedish-DateTime.yaml
//     - Language: Swedish
//     - ClassName: DateTimeDefinitions
// </auto-generated>
//
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// ------------------------------------------------------------------------------

namespace Microsoft.Recognizers.Definitions.Swedish
{
    using System;
    using System.Collections.Generic;

    public static class DateTimeDefinitions
    {
      public const string LangMarker = @"Swe";
      public const bool CheckBothBeforeAfter = false;
      public static readonly string TillRegex = $@"(?<till>\b(till|tom|t\.o\.m\.)\b(\s+den\b)?|{BaseDateTime.RangeConnectorSymbolRegex})";
      public static readonly string RangeConnectorRegex = $@"(?<and>\b(till|tom|t\.o\.\m\.)\b(\s+den\b)?|{BaseDateTime.RangeConnectorSymbolRegex})";
      public const string LastNegPrefix = @"(?<!(w(ill|ould|on\s*'\s*t)|m(ay|ight|ust)|sh(all|ould(n\s*'\s*t)?)|c(an(\s*'\s*t|not)?|ould(n\s*'\s*t)?))(\s+not)?\s+)";
      public static readonly string RelativeRegex = $@"\b(?<order>efterföljande|nästa|kommande|denna|{LastNegPrefix}senaste|föregående|tidigare|nuvarande|the)\b";
      public static readonly string StrictRelativeRegex = $@"\b(?<order>efterföljande|nästa|kommande|denna|{LastNegPrefix}senaste|föregående|tidigare|nuvarande)\b";
      public const string UpcomingPrefixRegex = @"((den\s+)?((kommande))";
      public static readonly string NextPrefixRegex = $@"\b(efterföljande|nästa|{UpcomingPrefixRegex})\b";
      public const string AfterNextSuffixRegex = @"\b(efter\s+nästa)\b";
      public const string PastPrefixRegex = @"(förra)\b";
      public static readonly string PreviousPrefixRegex = $@"({LastNegPrefix}last|previous|{PastPrefixRegex})\b";
      public const string ThisPrefixRegex = @"(denna|nuvarande|innevarande)\b";
      public const string RangePrefixRegex = @"(från|mellan)";
      public const string CenturySuffixRegex = @"(^sekel)\b";
      public const string ReferencePrefixRegex = @"(den|samma)\b";
      public const string FutureSuffixRegex = @"\b(i\s+)?(framtiden)\b";
      public const string DayRegex = @"(den\s*)?(?<!(\d+:?|\$)\s*)(?<day>(?:3[0-1]|[1-2]\d|0?[1-9])(?:a|e)?)(?=\b|t)";
      public const string ImplicitDayRegex = @"(den\s*)?(?<day>(?:3[0-1]|[0-2]?\d)(?:a|e))\b";
      public const string MonthNumRegex = @"(?<month>1[0-2]|(0)?[1-9])\b";
      public const string WrittenOneToNineRegex = @"(?:en|två|tre|fyra|fem|sex|sju|åtta|nio)";
      public const string WrittenElevenToNineteenRegex = @"(?:elva|tolv|(?:tret|fjor|fem|sex|sjut|ar|nit)ton)";
      public const string WrittenTensRegex = @"(?:tio|tjugo|trettio|fyrtio|femtio|sextio|sjuttio|åttio|nittio)";
      public static readonly string WrittenNumRegex = $@"(?:{WrittenOneToNineRegex}|{WrittenElevenToNineteenRegex}|{WrittenTensRegex}({WrittenOneToNineRegex})?)";
      public static readonly string WrittenCenturyFullYearRegex = $@"(?:(ett|två)tusen({WrittenOneToNineRegex}hundra)?)";
      public const string WrittenCenturyOrdinalYearRegex = @"(?:tjugo((ett|två))?|tio|elva|tolv|tretton|femton|arton|(?:fjor|sex|sjut|nit)(ton)?|ett|två|tre|fem|åtta)";
      public static readonly string CenturyRegex = $@"\b(?<century>{WrittenCenturyFullYearRegex}|{WrittenCenturyOrdinalYearRegex}(\s+hundra)?)\b";
      public static readonly string LastTwoYearNumRegex = $@"(?:noll\s+{WrittenOneToNineRegex}|{WrittenElevenToNineteenRegex}|{WrittenTensRegex}({WrittenOneToNineRegex})?)";
      public static readonly string FullTextYearRegex = $@"\b((?<firsttwoyearnum>{CenturyRegex})(?<lasttwoyearnum>{LastTwoYearNumRegex})\b|\b(?<firsttwoyearnum>{WrittenCenturyFullYearRegex}|{WrittenCenturyOrdinalYearRegex}hundra))\b";
      public const string OclockRegex = @"(?<oclock>prick)";
      public const string SpecialDescRegex = @"((?<ipm>)p\b)";
      public static readonly string AmDescRegex = $@"(?:{BaseDateTime.BaseAmDescRegex})";
      public static readonly string PmDescRegex = $@"(:?{BaseDateTime.BasePmDescRegex})";
      public static readonly string AmPmDescRegex = $@"(:?{BaseDateTime.BaseAmPmDescRegex})";
      public static readonly string DescRegex = $@"(:?(:?({OclockRegex}\s+)?(?<desc>({AmPmDescRegex}|{AmDescRegex}|{PmDescRegex}|{SpecialDescRegex})))|{OclockRegex})";
      public const string OfPrepositionRegex = @"(\bof\b)";
      public static readonly string TwoDigitYearRegex = $@"\b(?<![$])(?<year>([0-24-9]\d))(?!(\s*((\:\d)|{AmDescRegex}|{PmDescRegex}|\.\d)))\b";
      public static readonly string YearRegex = $@"(?:{BaseDateTime.FourDigitYearRegex}|{FullTextYearRegex})";
      public const string WeekDayRegex = @"\b(?<weekday>(?:sön?|mån?|tis?|tor?|fre?|ons?|lör?)(dag)?)s?\b";
      public const string SingleWeekDayRegex = @"\b(?<weekday>söndag|lördag|(?:mån|tis|tors|fre|ons)(dag)?|((?<=på\s+)(lör|sön)))\b";
      public static readonly string RelativeMonthRegex = $@"(?<relmonth>((dag\s+)?i\s+)?{RelativeRegex}\s+månad)\b";
      public const string WrittenMonthRegex = @"((?<month>apr(il)?|aug(usti)?|dec(ember)?|feb(ruari)?|jan(uari)?|juli?|juni?|mar(s)?|maj|nov(ember)?|okt(ober)?|sept(ember)?|sept?)((\s+månad)?)";
      public static readonly string MonthSuffixRegex = $@"(?<msuf>(?:(i|under)\s+)?({RelativeMonthRegex}|{WrittenMonthRegex}))";
      public const string DateUnitRegex = @"(?<unit>sekel|år|månad(er)?|veck(a|or)?|(?<business>(var))?dag(ar)?|helg(er)?|(?<=\s+\d{1,4})[ymwd])\b";
      public const string DateTokenPrefix = @"den ";
      public const string TimeTokenPrefix = @"klockan ";
      public const string TokenBeforeDate = @"den ";
      public const string TokenBeforeTime = @"klockan ";
      public const string FromRegex = @"\b(från(\s+den)?)$";
      public const string BetweenTokenRegex = @"\b(mellan(\s+den)?)$";
      public static readonly string SimpleCasesRegex = $@"\b({RangePrefixRegex}\s+)?({DayRegex})\s*{TillRegex}\s*({DayRegex}\s+{MonthSuffixRegex}|{MonthSuffixRegex}\s+{DayRegex})((\s+|\s*,\s*){YearRegex})?\b";
      public static readonly string MonthFrontSimpleCasesRegex = $@"\b({RangePrefixRegex}\s+)?{MonthSuffixRegex}\s+((från)\s+)?({DayRegex})\s*{TillRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?\b";
      public static readonly string MonthFrontBetweenRegex = $@"\b{MonthSuffixRegex}\s+(mellan\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?\b";
      public static readonly string BetweenRegex = $@"\b(between\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})\s+{MonthSuffixRegex}((\s+|\s*,\s*){YearRegex})?\b";
      public static readonly string MonthWithYear = $@"\b(({WrittenMonthRegex}[\.]?(\s*)[/\\\-\.,]?(\s+(år))?(\s*)({YearRegex}|(?<order>efter|nästa|senaste|detta|innevarande)\s+year))|(({YearRegex}|(?<order>efter|nästa|senaste|detta|innevarande)\s+år)(\s*),?(\s*){WrittenMonthRegex}))\b";
      public const string SpecialYearPrefixes = @"(kalender|(?<special>räkenskaps|skol))";
      public static readonly string OneWordPeriodRegex = $@"\b(((i\s+)?({StrictRelativeRegex}\s+)?(?<month>apr(il)?|aug(usti)?|dec(ember)?|feb(ruari)?|jan(uari)?|juli?|juni?|mar(s)?|maj|nov(ember)?|okt(ober)?|sep(tember)?|sept?))|(month|year) to date|(?<toDate>(till och med|tom|t\.o\.m\.)\s+idag)|({RelativeRegex}\s+)?(min\s+)?((?<business>arbets\s+weveckaek|arbetsvecka)|veckoslut|månad|(({SpecialYearPrefixes}\s+)?år))(?!(\s+\d+(?!({BaseDateTime.BaseAmDescRegex}|{BaseDateTime.BasePmDescRegex}))|\s+tom\s+idag))(\s+{AfterNextSuffixRegex})?)\b";
      public static readonly string MonthNumWithYear = $@"\b(({BaseDateTime.FourDigitYearRegex}(\s*)[/\-\.](\s*){MonthNumRegex})|({MonthNumRegex}(\s*)[/\-](\s*){BaseDateTime.FourDigitYearRegex}))\b";
      public static readonly string WeekOfMonthRegex = $@"\b(?<wom>(den|det\s+)?(?<cardinal>första|1:a|andr(a|e)|2:(a|e)|tredje|3:e|fjärde|4:e|femte|5:e|senaste)\s+veckan\s+{MonthSuffixRegex}(\s+{BaseDateTime.FourDigitYearRegex}|{RelativeRegex}\s+år)?)\b";
      public static readonly string WeekOfYearRegex = $@"\b(?<woy>(den|det\s+)?(?<cardinal>första|1:a|andr(a|e)|2:(a|e)|tredje|3:e|fjärde|4:e|femte|5:e|senaste)\s+veckan\s+({YearRegex}|{RelativeRegex}\s+år))\b";
      public static readonly string FollowedDateUnit = $@"^\s*{DateUnitRegex}";
      public static readonly string NumberCombinedWithDateUnit = $@"\b(?<num>\d+(\.\d*)?){DateUnitRegex}";
      public const string QuarterTermRegex = @"\b(((?<cardinal>första|1:a|andra|2:a|tredje|3:e|fjärde|4:e)[ -]+kvartalet)|(kv(?<number>[1-4])))\b";
      public static readonly string RelativeQuarterTermRegex = $@"\b(?<orderQuarter>{StrictRelativeRegex})\s+kvartalet\b";
      public static readonly string QuarterRegex = $@"((det\s+)?{QuarterTermRegex}(?:(\s*,\s*)?\s+({YearRegex}|{RelativeRegex}\s+år))?)|{RelativeQuarterTermRegex}";
      public static readonly string QuarterRegexYearFront = $@"(?:{YearRegex}|{RelativeRegex}\s+year)('s)?(?:\s*-\s*|\s+(det\s+)?)?{QuarterTermRegex}";
      public const string HalfYearTermRegex = @"(?<cardinal>första|1:a|andra|2:a)\s+halvåret";
      public static readonly string HalfYearFrontRegex = $@"(?<year>((1[5-9]|20)\d{{2}})|2100)(\s*-\s*|\s+(the\s+)?)?h(?<number>[1-2])";
      public static readonly string HalfYearBackRegex = $@"(h(?<number>[1-2])|({HalfYearTermRegex}))(\s*,\s*)?\s+({YearRegex})";
    }
}